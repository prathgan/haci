{"ast":null,"code":"var _jsxFileName = \"/Users/prathamgandhi/Desktop/Bx Thesis/proto/haci-frontend/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { AppStateProvider, useAppState } from './components/AppStateContext';\nimport CodeEditor from './components/CodeEditor';\nimport ErrorsPanel from './components/ErrorsPanel';\nimport ConsolePanel from './components/ConsolePanel';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(AppStateProvider, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(RunCodeButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(CodeEditor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-panels\",\n        children: [/*#__PURE__*/_jsxDEV(ErrorsPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConsolePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n// Separate component for the button to use the useAppState hook correctly\n_c = App;\nfunction RunCodeButton() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    code,\n    setConsoleOutput,\n    setErrors\n  } = useAppState();\n\n  // In RunCodeButton component\n  function executeCode() {\n    _s();\n    const {\n      code,\n      setConsoleOutput,\n      setErrors\n    } = useAppState();\n    let consoleOutput = '';\n\n    // Redirect console.log\n    const originalConsoleLog = console.log;\n    console.log = (...args) => {\n      consoleOutput += args.join(' ') + '\\n';\n      originalConsoleLog(...args);\n    };\n    try {\n      // Wrap code in a function and execute\n      new Function(code)();\n      setErrors([]); // Clear previous errors if execution is successful\n    } catch (error) {\n      // Handle errors and extract line number if possible\n      const lineMatch = error.stack.match(/<anonymous>:(\\d+):\\d+/);\n      const lineNumber = lineMatch ? lineMatch[1] : \"unknown\";\n      setErrors([`Line ${lineNumber}: ${error.message}`]);\n    }\n\n    // Restore original console.log and update console output\n    console.log = originalConsoleLog;\n    setConsoleOutput(consoleOutput);\n  }\n  _s(executeCode, \"nxNYymzMQMdpt8M30vlYBvVpqnI=\", false, function () {\n    return [useAppState];\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: executeCode,\n    children: \"Run Code\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n}\n_s2(RunCodeButton, \"nxNYymzMQMdpt8M30vlYBvVpqnI=\", false, function () {\n  return [useAppState];\n});\n_c2 = RunCodeButton;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"RunCodeButton\");","map":{"version":3,"names":["React","AppStateProvider","useAppState","CodeEditor","ErrorsPanel","ConsolePanel","jsxDEV","_jsxDEV","App","children","className","RunCodeButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","_s","$RefreshSig$","code","setConsoleOutput","setErrors","executeCode","consoleOutput","originalConsoleLog","console","log","args","join","Function","error","lineMatch","stack","match","message","onClick","_c2","$RefreshReg$"],"sources":["/Users/prathamgandhi/Desktop/Bx Thesis/proto/haci-frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { AppStateProvider, useAppState } from './components/AppStateContext';\nimport CodeEditor from './components/CodeEditor';\nimport ErrorsPanel from './components/ErrorsPanel';\nimport ConsolePanel from './components/ConsolePanel';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <AppStateProvider>\n      <div className=\"toolbar\">\n        <RunCodeButton /> {/* This button is now part of the toolbar */}\n      </div>\n      <div className=\"app-container\">\n        <CodeEditor />\n        <div className=\"side-panels\">\n          <ErrorsPanel />\n          <ConsolePanel />\n        </div>\n      </div>\n    </AppStateProvider>\n  );\n}\n\n\n// Separate component for the button to use the useAppState hook correctly\nfunction RunCodeButton() {\n\n  const { code, setConsoleOutput, setErrors } = useAppState();\n\n  // In RunCodeButton component\n  function executeCode() {\n    const { code, setConsoleOutput, setErrors } = useAppState();\n    let consoleOutput = '';\n\n    // Redirect console.log\n    const originalConsoleLog = console.log;\n    console.log = (...args) => {\n      consoleOutput += args.join(' ') + '\\n';\n      originalConsoleLog(...args);\n    };\n\n    try {\n      // Wrap code in a function and execute\n      new Function(code)();\n      setErrors([]); // Clear previous errors if execution is successful\n    } catch (error) {\n      // Handle errors and extract line number if possible\n      const lineMatch = error.stack.match(/<anonymous>:(\\d+):\\d+/);\n      const lineNumber = lineMatch ? lineMatch[1] : \"unknown\";\n      setErrors([`Line ${lineNumber}: ${error.message}`]);\n    }\n\n    // Restore original console.log and update console output\n    console.log = originalConsoleLog;\n    setConsoleOutput(consoleOutput);\n  }\n\n\n  return <button onClick={executeCode}>Run Code</button>;\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}