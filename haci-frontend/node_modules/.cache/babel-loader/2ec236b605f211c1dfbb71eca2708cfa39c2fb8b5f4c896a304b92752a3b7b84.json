{"ast":null,"code":"var _jsxFileName = \"/Users/prathamgandhi/Desktop/Bx Thesis/proto/haci-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { AppStateProvider, useAppState } from './components/AppStateContext';\nimport CodeEditor from './components/CodeEditor';\nimport ErrorsPanel from './components/ErrorsPanel';\nimport ConsolePanel from './components/ConsolePanel';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(AppStateProvider, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(RunCodeButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(CodeEditor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-panels\",\n        children: [/*#__PURE__*/_jsxDEV(ErrorsPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConsolePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n// Separate component for the button to use the useAppState hook correctly\n_c = App;\nfunction RunCodeButton() {\n  _s();\n  const {\n    code,\n    setConsoleOutput,\n    setErrors\n  } = useAppState();\n\n  // In RunCodeButton component\n  function executeCode() {\n    let consoleOutput = `Run at: ${new Date().toLocaleTimeString()}\\n`;\n    const originalConsoleLog = console.log;\n    console.log = (...args) => {\n      const message = \">> \" + args.join(' ') + '\\n';\n      consoleOutput += message;\n      originalConsoleLog(...args);\n    };\n    try {\n      const execute = new Function('console', code);\n      execute({\n        log: console.log\n      });\n    } catch (error) {\n      const lineMatch = error.stack.match(/<anonymous>:(\\d+):\\d+/);\n      const lineNumber = lineMatch ? lineMatch[1] : \"unknown\";\n      setErrors([`Line ${lineNumber - 2}: ${error.message}`]);\n      consoleOutput += `Line ${lineNumber - 2}: ${error.message}\\n`;\n    }\n    setConsoleOutput(consoleOutput);\n    console.log = originalConsoleLog;\n    this.refs.aceEditor.editor.gotoLine(6);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: executeCode,\n    children: \"Run Code\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n}\n_s(RunCodeButton, \"nxNYymzMQMdpt8M30vlYBvVpqnI=\", false, function () {\n  return [useAppState];\n});\n_c2 = RunCodeButton;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"RunCodeButton\");","map":{"version":3,"names":["React","AppStateProvider","useAppState","CodeEditor","ErrorsPanel","ConsolePanel","jsxDEV","_jsxDEV","App","children","className","RunCodeButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","code","setConsoleOutput","setErrors","executeCode","consoleOutput","Date","toLocaleTimeString","originalConsoleLog","console","log","args","message","join","execute","Function","error","lineMatch","stack","match","refs","aceEditor","editor","gotoLine","onClick","_c2","$RefreshReg$"],"sources":["/Users/prathamgandhi/Desktop/Bx Thesis/proto/haci-frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { AppStateProvider, useAppState } from './components/AppStateContext';\nimport CodeEditor from './components/CodeEditor';\nimport ErrorsPanel from './components/ErrorsPanel';\nimport ConsolePanel from './components/ConsolePanel';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <AppStateProvider>\n      <div className=\"toolbar\">\n        <RunCodeButton /> {/* This button is now part of the toolbar */}\n      </div>\n      <div className=\"app-container\">\n        <CodeEditor />\n        <div className=\"side-panels\">\n          <ErrorsPanel />\n          <ConsolePanel />\n        </div>\n      </div>\n    </AppStateProvider>\n  );\n}\n\n\n// Separate component for the button to use the useAppState hook correctly\nfunction RunCodeButton() {\n\n  const { code, setConsoleOutput, setErrors } = useAppState();\n\n  // In RunCodeButton component\n  function executeCode() {\n    let consoleOutput = `Run at: ${new Date().toLocaleTimeString()}\\n`;\n\n    const originalConsoleLog = console.log;\n    console.log = (...args) => {\n      const message = \">> \" + args.join(' ') + '\\n';\n      consoleOutput += message;\n      originalConsoleLog(...args);\n    };\n\n    try {\n      const execute = new Function('console', code);\n      execute({ log: console.log });\n    } catch (error) {\n      const lineMatch = error.stack.match(/<anonymous>:(\\d+):\\d+/);\n      const lineNumber = lineMatch ? lineMatch[1] : \"unknown\";\n      setErrors([`Line ${lineNumber - 2}: ${error.message}`]);\n      consoleOutput += `Line ${lineNumber - 2}: ${error.message}\\n`;\n    }\n\n    setConsoleOutput(consoleOutput);\n    console.log = originalConsoleLog;\n\n\n  this.refs.aceEditor.editor.gotoLine(6)\n  }\n\n\n\n  return <button onClick={executeCode}>Run Code</button>;\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}