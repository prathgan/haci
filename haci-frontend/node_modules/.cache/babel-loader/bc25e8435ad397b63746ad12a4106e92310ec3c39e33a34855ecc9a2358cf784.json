{"ast":null,"code":"var _jsxFileName = \"/Users/prathamgandhi/Desktop/Bx Thesis/proto/haci-frontend/src/components/CodeEditor.js\",\n  _s = $RefreshSig$();\nimport '../styles/CodeEditor.css';\nimport React, { useRef, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport { useAppState } from './AppStateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeEditor({\n  focused\n}) {\n  _s();\n  // Add the focused prop\n  const {\n    code,\n    setCode\n  } = useAppState();\n  const aceEditorRef = useRef();\n  useEffect(() => {\n    var _aceEditorRef$current;\n    const editor = (_aceEditorRef$current = aceEditorRef.current) === null || _aceEditorRef$current === void 0 ? void 0 : _aceEditorRef$current.editor;\n    if (editor && focused) {\n      // Check if the editor is focused\n      // Add marker and navigation commands only if the editor is focused\n\n      // Ctrl + , = Drop marker 1\n      editor.commands.addCommand({\n        name: 'dropMarker1',\n        bindKey: {\n          win: 'Ctrl-,',\n          mac: 'Ctrl-,'\n        },\n        exec: editor => {\n          markers.current['marker1'] = editor.getCursorPosition();\n          console.log(\"m1 dropped at : \" + editor.getCursorPosition());\n        }\n      });\n\n      // Option + , = Jump to marker 1\n      editor.commands.addCommand({\n        name: 'jumpToMarker1',\n        bindKey: {\n          win: 'Alt-,',\n          mac: 'Option-,'\n        },\n        exec: editor => {\n          const position = markers.current['marker1'];\n          if (position) {\n            editor.moveCursorToPosition(position);\n            console.log(\"going to m1 at : \" + position);\n          }\n        }\n      });\n\n      // Ctrl + , = Drop marker 2\n      editor.commands.addCommand({\n        name: 'dropMarker2',\n        bindKey: {\n          win: 'Ctrl-.',\n          mac: 'Ctrl-.'\n        },\n        exec: editor => {\n          markers.current['marker2'] = editor.getCursorPosition();\n          console.log(\"m2 dropped at : \" + editor.getCursorPosition());\n        }\n      });\n\n      // Option + , = Jump to marker 2\n      editor.commands.addCommand({\n        name: 'jumpToMarker2',\n        bindKey: {\n          win: 'Alt-.',\n          mac: 'Option-.'\n        },\n        exec: editor => {\n          const position = markers.current['marker2'];\n          if (position) {\n            editor.moveCursorToPosition(position);\n            console.log(\"going to m2 at : \" + position);\n          }\n        }\n      });\n\n      // Command + 1: Move to start\n      editor.commands.addCommand({\n        name: 'moveToStart',\n        bindKey: {\n          win: 'Ctrl-1',\n          mac: 'Option-1'\n        },\n        exec: editor => {\n          editor.gotoLine(1, 0, false);\n        }\n      });\n\n      // Command + 2: Move to middle\n      editor.commands.addCommand({\n        name: 'moveToMiddle',\n        bindKey: {\n          win: 'Ctrl-2',\n          mac: 'Option-2'\n        },\n        exec: editor => {\n          const middleLine = Math.floor(editor.session.getLength() / 2);\n          editor.gotoLine(middleLine, 0, false);\n        }\n      });\n\n      // Command + 3: Move to end\n      editor.commands.addCommand({\n        name: 'moveToEnd',\n        bindKey: {\n          win: 'Ctrl-3',\n          mac: 'Option-3'\n        },\n        exec: editor => {\n          const lastLine = editor.session.getLength();\n          editor.gotoLine(lastLine, 0, false);\n        }\n      });\n      editor.commands.addCommand(dropMarker1);\n      editor.commands.addCommand(jumpToMarker1);\n      editor.commands.addCommand(dropMarker2);\n      editor.commands.addCommand(jumpToMarker2);\n      editor.commands.addCommand(moveToStart);\n      editor.commands.addCommand(moveToMiddle);\n      editor.commands.addCommand(moveToEnd);\n      return () => {\n        // Remove commands when the editor loses focus or the component unmounts\n        editor.commands.removeCommand('dropMarker1');\n        editor.commands.removeCommand('jumpToMarker1');\n        editor.commands.removeCommand('dropMarker2');\n        editor.commands.removeCommand('jumpToMarker2');\n        editor.commands.removeCommand('moveToStart');\n        editor.commands.removeCommand('moveToMiddle');\n        editor.commands.removeCommand('moveToEnd');\n      };\n    }\n  }, [focused]); // Re-run the effect when the focused prop changes\n\n  function handleCodeChange(newCode) {\n    setCode(newCode);\n  }\n  function moveToLine(lineNumber) {\n    if (aceEditorRef.current) {\n      aceEditorRef.current.editor.gotoLine(lineNumber, 0, true);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flex: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(AceEditor, {\n      ref: aceEditorRef,\n      mode: \"javascript\",\n      theme: \"monokai\",\n      name: \"UNIQUE_ID_OF_DIV\",\n      value: code,\n      onChange: handleCodeChange,\n      editorProps: {\n        $blockScrolling: true\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeEditor, \"eVYCOPlZ4I6Jj1AZIMhBhBKcx2Y=\", false, function () {\n  return [useAppState];\n});\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useRef","useEffect","AceEditor","useAppState","jsxDEV","_jsxDEV","CodeEditor","focused","_s","code","setCode","aceEditorRef","_aceEditorRef$current","editor","current","commands","addCommand","name","bindKey","win","mac","exec","markers","getCursorPosition","console","log","position","moveCursorToPosition","gotoLine","middleLine","Math","floor","session","getLength","lastLine","dropMarker1","jumpToMarker1","dropMarker2","jumpToMarker2","moveToStart","moveToMiddle","moveToEnd","removeCommand","handleCodeChange","newCode","moveToLine","lineNumber","style","flex","children","ref","mode","theme","value","onChange","editorProps","$blockScrolling","width","height","fileName","_jsxFileName","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prathamgandhi/Desktop/Bx Thesis/proto/haci-frontend/src/components/CodeEditor.js"],"sourcesContent":["import '../styles/CodeEditor.css';\nimport React, { useRef, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport { useAppState } from './AppStateContext';\n\nfunction CodeEditor({ focused }) { // Add the focused prop\n  const { code, setCode } = useAppState();\n  const aceEditorRef = useRef();\n\n  useEffect(() => {\n    const editor = aceEditorRef.current?.editor;\n\n    if (editor && focused) { // Check if the editor is focused\n      // Add marker and navigation commands only if the editor is focused\n\n      // Ctrl + , = Drop marker 1\n      editor.commands.addCommand({\n        name: 'dropMarker1',\n        bindKey: { win: 'Ctrl-,', mac: 'Ctrl-,' },\n        exec: (editor) => {\n          markers.current['marker1'] = editor.getCursorPosition();\n          console.log(\"m1 dropped at : \" + editor.getCursorPosition())\n        }\n      });\n\n      // Option + , = Jump to marker 1\n      editor.commands.addCommand({\n        name: 'jumpToMarker1',\n        bindKey: { win: 'Alt-,', mac: 'Option-,' },\n        exec: (editor) => {\n          const position = markers.current['marker1'];\n          if (position) {\n            editor.moveCursorToPosition(position);\n            console.log(\"going to m1 at : \" + position)\n          }\n        }\n      });\n\n      // Ctrl + , = Drop marker 2\n      editor.commands.addCommand({\n        name: 'dropMarker2',\n        bindKey: { win: 'Ctrl-.', mac: 'Ctrl-.' },\n        exec: (editor) => {\n          markers.current['marker2'] = editor.getCursorPosition();\n          console.log(\"m2 dropped at : \" + editor.getCursorPosition())\n        }\n      });\n\n      // Option + , = Jump to marker 2\n      editor.commands.addCommand({\n        name: 'jumpToMarker2',\n        bindKey: { win: 'Alt-.', mac: 'Option-.' },\n        exec: (editor) => {\n          const position = markers.current['marker2'];\n          if (position) {\n            editor.moveCursorToPosition(position);\n            console.log(\"going to m2 at : \" + position)\n          }\n        }\n      });\n\n      // Command + 1: Move to start\n      editor.commands.addCommand({\n        name: 'moveToStart',\n        bindKey: { win: 'Ctrl-1', mac: 'Option-1' },\n        exec: (editor) => {\n          editor.gotoLine(1, 0, false);\n        }\n      });\n\n      // Command + 2: Move to middle\n      editor.commands.addCommand({\n        name: 'moveToMiddle',\n        bindKey: { win: 'Ctrl-2', mac: 'Option-2' },\n        exec: (editor) => {\n          const middleLine = Math.floor(editor.session.getLength() / 2);\n          editor.gotoLine(middleLine, 0, false);\n        }\n      });\n\n      // Command + 3: Move to end\n      editor.commands.addCommand({\n        name: 'moveToEnd',\n        bindKey: { win: 'Ctrl-3', mac: 'Option-3' },\n        exec: (editor) => {\n          const lastLine = editor.session.getLength();\n          editor.gotoLine(lastLine, 0, false);\n        }\n      });\n\n      editor.commands.addCommand(dropMarker1);\n      editor.commands.addCommand(jumpToMarker1);\n      editor.commands.addCommand(dropMarker2);\n      editor.commands.addCommand(jumpToMarker2);\n      editor.commands.addCommand(moveToStart);\n      editor.commands.addCommand(moveToMiddle);\n      editor.commands.addCommand(moveToEnd);\n\n\n      return () => {\n        // Remove commands when the editor loses focus or the component unmounts\n        editor.commands.removeCommand('dropMarker1');\n        editor.commands.removeCommand('jumpToMarker1');\n        editor.commands.removeCommand('dropMarker2');\n        editor.commands.removeCommand('jumpToMarker2');\n        editor.commands.removeCommand('moveToStart');\n        editor.commands.removeCommand('moveToMiddle');\n        editor.commands.removeCommand('moveToEnd');\n\n      };\n    }\n  }, [focused]); // Re-run the effect when the focused prop changes\n\n  function handleCodeChange(newCode) {\n    setCode(newCode);\n  }\n\n  function moveToLine(lineNumber) {\n    if (aceEditorRef.current) {\n      aceEditorRef.current.editor.gotoLine(lineNumber, 0, true);\n    }\n  }\n\n  return (\n    <div style={{ flex: 2 }}>\n      <AceEditor\n        ref={aceEditorRef}\n        mode=\"javascript\"\n        theme=\"monokai\"\n        name=\"UNIQUE_ID_OF_DIV\"\n        value={code}\n        onChange={handleCodeChange}\n        editorProps={{ $blockScrolling: true }}\n        style={{ width: '100%', height: '100%' }}\n      />\n    </div>\n  );\n}\n\nexport default CodeEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}