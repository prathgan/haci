{"ast":null,"code":"var _jsxFileName = \"/Users/prathamgandhi/Desktop/Bx Thesis/proto/haci-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { AppStateProvider } from './components/AppStateContext';\nimport CodeEditor from './components/CodeEditor';\nimport ErrorsPanel from './components/ErrorsPanel';\nimport ConsolePanel from './components/ConsolePanel';\nimport './App.css'; // Make sure to import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(AppStateProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(CodeEditor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: executeCode,\n        children: \"Run Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-panels\",\n        children: [/*#__PURE__*/_jsxDEV(ErrorsPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConsolePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n// In your App component or another suitable place\n_c = App;\nfunction executeCode() {\n  _s();\n  const {\n    code\n  } = useAppState(); // Assuming this hook provides access to the current code\n  try {\n    eval(code); // Executes the code from the editor\n  } catch (error) {\n    console.error(\"Error executing code:\", error);\n  }\n}\n_s(executeCode, \"rBe5CNBF7lKzWOUUgQL1om2eL+I=\", true);\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","AppStateProvider","CodeEditor","ErrorsPanel","ConsolePanel","jsxDEV","_jsxDEV","App","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","executeCode","_c","_s","code","useAppState","eval","error","console","$RefreshReg$"],"sources":["/Users/prathamgandhi/Desktop/Bx Thesis/proto/haci-frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { AppStateProvider } from './components/AppStateContext';\nimport CodeEditor from './components/CodeEditor';\nimport ErrorsPanel from './components/ErrorsPanel';\nimport ConsolePanel from './components/ConsolePanel';\n\nimport './App.css'; // Make sure to import the CSS file\n\nfunction App() {\n  return (\n    <AppStateProvider>\n      <div className=\"app-container\">\n        <CodeEditor />\n        <button onClick={executeCode}>Run Code</button>\n        <div className=\"side-panels\"> \n          <ErrorsPanel />\n          <ConsolePanel />\n        </div>\n      </div>\n    </AppStateProvider>\n  );\n}\n\n// In your App component or another suitable place\nfunction executeCode() {\n  const { code } = useAppState(); // Assuming this hook provides access to the current code\n  try {\n    eval(code); // Executes the code from the editor\n  } catch (error) {\n    console.error(\"Error executing code:\", error);\n  }\n}\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA,CAACL,gBAAgB;IAAAO,QAAA,eACfF,OAAA;MAAKG,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BF,OAAA,CAACJ,UAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdP,OAAA;QAAQQ,OAAO,EAAEC,WAAY;QAAAP,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/CP,OAAA;QAAKG,SAAS,EAAC,aAAa;QAAAD,QAAA,gBAC1BF,OAAA,CAACH,WAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACfP,OAAA,CAACF,YAAY;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEvB;;AAEA;AAAAG,EAAA,GAfST,GAAG;AAgBZ,SAASQ,WAAWA,CAAA,EAAG;EAAAE,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGC,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,IAAI;IACFC,IAAI,CAACF,IAAI,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF;AAACJ,EAAA,CAPQF,WAAW;AAUpB,eAAeR,GAAG;AAAC,IAAAS,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}